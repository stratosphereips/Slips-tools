description: Test the generation of valid JSON actions with correct structure and parameters.

providers:
  - id: ollama:smollm2:1.7b
    config:
      num_predict: 2048
  - id: ollama:gemma3:1b
    config:
      num_predict: 2048
  - id: ollama:llama3.2:1b
    config:
      num_predict: 2048
  - id: ollama:llama3.2:3b
    config:
      num_predict: 2048
  - id: ollama:phi4-mini:latest
    config:
      num_predict: 2048
  - id: ollama:qwen2.5:1.5b
    config:
      num_predict: 2048
  - id: ollama:qwen2.5:3b
    config:
      num_predict: 2048
  - id: ollama:granite3.1-dense:2b
    config:
      num_predict: 2048




prompts:
  - "Output a raw JSON object (without backticks or formatting) that represents the following networking action: {{action}}. The JSON should contain the keys `action` and `parameters`, and no additional text or formatting. Respect the following format: {{example}}"

tests:
  - vars:
      action: 'Scan a Network targeting 1.1.1.0/24 from 2.2.2.2'
      example: '{"action":"ScanNetwork", "parameters": {"target_network":"192.168.1.0/24", "source_host": "192.168.1.1"}}'
    assert:
      - type: is-json
        value:
          type: object
          required: ["action", "parameters"]
          properties:
            action:
              type: string
              enum: ["ScanNetwork"]
            parameters:
              type: object
              required: ["target_network", "source_host"]
              properties:
                target_network:
                  type: string
                source_host:
                  type: string

  - vars:
      action: 'Find Services on 2.2.2.3 from 2.2.2.2'
      example: '{"action":"ScanServices", "parameters": {"target_host":"192.168.1.22", "source_host": "192.168.1.1"}}'
    assert:
      - type: is-json
        value:
          type: object
          required: ["action", "parameters"]
          properties:
            action:
              type: string
              enum: ["ScanServices"]
            parameters:
              type: object
              required: ["target_host", "source_host"]
              properties:
                target_host:
                  type: string
                source_host:
                  type: string

  - vars:
      action: 'ExploitService openssh on 1.1.1.1 from 1.1.1.2'
      example: '{"action":"ExploitService", "parameters":{"target_host":"192.168.1.22", "target_service":"openssh", "source_host": "192.168.1.1"}}'
    assert:
      - type: is-json
        value:
          type: object
          required: ["action", "parameters"]
          properties:
            action:
              type: string
              enum: ["ExploitService"]
            parameters:
              type: object
              required: ["target_host", "target_service", "source_host"]
              properties:
                target_host:
                  type: string
                target_service:
                  type: string
                source_host:
                  type: string

  - vars:
      action: 'FindData on 1.1.1.1 from 1.1.1.2'
      example: '{"action":"FindData", "parameters":{"target_host":"192.168.1.22", "source_host": "192.168.1.1"}}'
    assert:
      - type: is-json
        value:
          type: object
          required: ["action", "parameters"]
          properties:
            action:
              type: string
              enum: ["FindData"]
            parameters:
              type: object
              required: ["target_host", "source_host"]
              properties:
                target_host:
                  type: string
                source_host:
                  type: string

  - vars:
      action: 'Exfiltrate Data from 1.1.1.2 to 2.2.2.2, data owned by User1 with ID WebData'
      example: '{"action":"ExfiltrateData", "parameters": {"target_host": "200.21.1.1", "data": {"owner":"User1", "id":"WebData"}, "source_host": "192.168.1.22"}}'
    assert:
      - type: is-json
        value:
          type: object
          required: ["action", "parameters"]
          properties:
            action:
              type: string
              enum: ["ExfiltrateData"]
            parameters:
              type: object
              required: ["target_host", "source_host", "data"]
              properties:
                target_host:
                  type: string
                source_host:
                  type: string
                data:
                  type: object
                  required: ["owner", "id"]
                  properties:
                    owner:
                      type: string
                    id:
                      type: string

